networks:
  guacnetwork_compose:
    driver: bridge

services:
  postgres:
    image: postgres:16.1
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    networks:
      - guacnetwork_compose
    environment:
      PGDATA: /var/lib/postgresql/data/${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  guacd:
    container_name: guacd_compose
    image: guacamole/guacd
    networks:
      - guacnetwork_compose
    restart: always
    depends_on:
      - postgres

  init-guacamole-db:
    image: guacamole/guacamole
    volumes:
      - shared_guac_init:/shared
    user: root
    entrypoint: sh -c "
      mkdir -p /shared && 
      chmod 777 /shared && 
      /opt/guacamole/bin/initdb.sh --postgresql > /shared/initdb.sql"
    networks:
      - guacnetwork_compose

  # postgres
  postgres_guac:
    container_name: postgres_guacamole_compose
    image: postgres:16.1
    volumes:
      - postgres_guacamole_data:/var/lib/postgresql/data:Z
      - shared_guac_init:/docker-entrypoint-initdb.d:ro
    ports:
      - '${DB_GUAC_EXTERNAL_PORT}:5432'
    environment:
      PGDATA: /var/lib/postgresql/data/guacamole
      POSTGRES_DB: ${DB_GUAC_NAME}
      POSTGRES_PASSWORD: ${DB_GUAC_PASSWORD}
      POSTGRES_USER: ${DB_GUAC_USERNAME}
    depends_on:
      - init-guacamole-db
    networks:
      - guacnetwork_compose
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_GUAC_USERNAME} -d ${DB_GUAC_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # guacamole
  guacamole:
    container_name: guacamole_compose
    image: guacamole/guacamole
    volumes:
      - shared_guac_init:/shared
    group_add:
      - "1000"
    depends_on:
      - guacd
    networks:
      - guacnetwork_compose
    environment:
      POSTGRES_HOSTNAME: ${DB_GUAC_HOST}
      POSTGRES_DATABASE: ${DB_GUAC_NAME}
      POSTGRES_PASSWORD: ${DB_GUAC_PASSWORD}
      POSTGRES_USER: ${DB_GUAC_USERNAME}
      GUACD_HOSTNAME: guacd
      RECORDING_SEARCH_PATH: /record
      GUACAMOLE_PROPERTIES: |
        enable-connection-history: true
        enable-user-tracking: true
        char-encoding: UTF-8
        allowed-languages: en,ru,ja,zh
    command: >
      sh -c "
        /opt/guacamole/bin/initdb.sh --postgresql > /shared/initdb.sql;
        /opt/guacamole/bin/start.sh
      "
    restart: always


  nginx:
    container_name: nginx_guacamole_compose
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "${NGINX_GUAC_PORT}:80/tcp"
    networks:
      - guacnetwork_compose
    depends_on:
      - guacamole
    restart: always

  backend:
    build:
      context: .
      dockerfile: ./remote-desktop-server/Dockerfile
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      DATABASE_URL: postgres://${DB_USERNAME}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=disable
    networks:
      - guacnetwork_compose
    depends_on:
      postgres:
        condition: service_healthy
      postgres_guac:
        condition: service_healthy
    command: >
      sh -c "echo 'Waiting for PostgreSQL to be ready...';
      psql -h postgres -U $${DB_USERNAME} -d $${DB_NAME} -c 'SELECT 1'
      psql -h postgres_guac -U $${DB_GUAC_USERNAME} -d $${DB_GUAC_NAME} -c 'SELECT 1'
      echo 'Running migrations...';
      migrate -path /app/internal/schema -database \"$${DATABASE_URL}\" up;
      echo 'Starting application...';
      exec ./remote-desktop-server"    

  frontend:
    build:
      context: .
      dockerfile: ./remote-desktop-ui/Dockerfile
    depends_on:
      - backend
    ports:
      - "${SERVER_IP}:${VITE_PORT}:80"

volumes:
  postgres_data:
  postgres_guacamole_data:
  shared_guac_init: